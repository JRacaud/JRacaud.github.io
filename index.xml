<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jonathan Racaud on JRacaud</title><link>https://jracaud.com/</link><description>Recent content in Jonathan Racaud on JRacaud</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 30 Jan 2022 16:17:00 +0100</lastBuildDate><atom:link href="https://jracaud.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Discovering Hugo</title><link>https://jracaud.com/articles/discovering_hugo/</link><pubDate>Sun, 30 Jan 2022 00:00:00 +0000</pubDate><guid>https://jracaud.com/articles/discovering_hugo/</guid><description>So I decided to go with the static website generator called Hugo for building my blog. My first impression is that it is a good static site generator so far.
It is written in Go, and for what I used of it, it is quite fast. Being accustomed to PHP static site generators, having the hot-reload code generation being fast was quite surprising in a good way.
Alas, there&amp;rsquo;s one issue: it runs code inside of comments.</description></item><item><title>Swift - Get random enum</title><link>https://jracaud.com/snippets/swift/get_random_enum/</link><pubDate>Sun, 30 Jan 2022 00:00:00 +0000</pubDate><guid>https://jracaud.com/snippets/swift/get_random_enum/</guid><description>Function definition func getRandomEnum&amp;lt;T&amp;gt;() -&amp;gt; T? where T: RawRepresentable &amp;amp; CaseIterable &amp;amp;&amp;amp; T.RawValue == Int { let max = Int(T.self.allCases.count) let value = Int.random(in: 0...max) return T(rawValue: value) } Usage let country: Countries = getRandomEnum() ?? .france let language: Languages = getRandomEnum() ?? .french Pre-requesite This function will only work for enum that are defined like this:
enum Countries: Int, CaseIterable { case france = 0 case unitedKingdom case china case japan } Explanation The function relies on Swift&amp;rsquo;s generics and type infering to be able to get the correct random enum.</description></item></channel></rss>